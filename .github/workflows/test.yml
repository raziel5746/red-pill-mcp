name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16.x, 18.x, 20.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Run lint
      run: npm run lint
      
    - name: Run unit tests
      run: npm run test:unit
      
    - name: Run integration tests
      run: npm run test:integration
      
    - name: Run e2e tests
      run: npm run test:e2e
      
    - name: Generate coverage report
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Run performance tests
      run: npm run test:performance
      env:
        NODE_OPTIONS: '--max-old-space-size=4096'
        
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-results
        path: |
          coverage/
          *.log

  test-without-performance:
    name: Quick Test (No Performance)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Run quick tests
      run: npm run test:quick
      env:
        SKIP_PERFORMANCE: true

  compatibility:
    name: VS Code Compatibility
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Package extension
      run: npm run package
      
    - name: Upload VSIX
      uses: actions/upload-artifact@v3
      with:
        name: vsix-package
        path: '*.vsix'

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for vulnerable dependencies
      run: npm audit fix --dry-run

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, performance, compatibility, security]
    if: always()
    
    steps:
    - name: Notify success
      if: needs.test.result == 'success' && needs.performance.result == 'success'
      run: |
        echo "✅ All tests passed successfully!"
        echo "- Unit, integration, and e2e tests: PASSED"
        echo "- Performance tests: PASSED"
        echo "- Compatibility check: PASSED"
        echo "- Security scan: PASSED"
        
    - name: Notify failure
      if: needs.test.result == 'failure' || needs.performance.result == 'failure'
      run: |
        echo "❌ Some tests failed!"
        echo "- Test result: ${{ needs.test.result }}"
        echo "- Performance result: ${{ needs.performance.result }}"
        echo "- Compatibility result: ${{ needs.compatibility.result }}"
        echo "- Security result: ${{ needs.security.result }}"
        exit 1